{"version":3,"file":"_server.js","sources":["../../../../../../../src/lib/server/auth.js","../../../../../../../src/routes/api/events/+server.js"],"sourcesContent":["import { json } from '@sveltejs/kit';\nimport { env } from '$env/dynamic/private';\n\n/**\n * Middleware to protect API endpoints\n * @param {Request} request - The incoming request\n * @returns {Response|null} - Returns error response if unauthorized, null if authorized\n */\nexport async function requireAuth(request) {\n    try {\n        const authHeader = request.headers.get('Authorization');\n        \n        if (!authHeader || !authHeader.startsWith('Bearer ')) {\n            return new Response(\n                JSON.stringify({ error: 'Authorization header missing or invalid' }),\n                {\n                    status: 401,\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }\n            );\n        }\n\n        const token = authHeader.split(' ')[1];\n        \n        // In a real application, you would validate the token here\n        // For now, we're using a simple environment variable comparison\n        if (token !== env.API_TOKEN) {\n            return new Response(\n                JSON.stringify({ error: 'Invalid token' }),\n                {\n                    status: 401,\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }\n            );\n        }\n\n        return null; // Auth successful\n    } catch (error) {\n        console.error('Auth error:', error);\n        return new Response(\n            JSON.stringify({ error: 'Internal server error' }),\n            {\n                status: 500,\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }\n        );\n    }\n}\n\n/**\n * Helper to validate specific roles\n * @param {string[]} allowedRoles - Array of roles that are allowed\n * @param {string} userRole - The user's role\n * @returns {boolean} - Whether the user has permission\n */\nexport function hasRole(allowedRoles, userRole) {\n    return allowedRoles.includes(userRole);\n}\n","import { json } from '@sveltejs/kit';\nimport { base, formatRecord, handleAirtableError } from '$lib/server/airtable';\nimport { requireAuth } from '$lib/server/auth';\n\n/** @type {import('./$types').RequestHandler} */\nexport async function GET({ request, url }) {\n    // Check authentication\n    const authError = await requireAuth(request);\n    if (authError) return authError;\n\n    try {\n        // Get query parameters\n        const id = url.searchParams.get('id');\n        const view = url.searchParams.get('view');\n        const filterByFormula = url.searchParams.get('filterByFormula');\n\n        let query = base('Events');\n\n        if (id) {\n            // Get single record\n            const record = await query.find(id);\n            return json(formatRecord(record));\n        } else if (view) {\n            // Get records from specific view\n            const records = await query\n                .select({\n                    view,\n                    sort: [{ field: 'Starts at', direction: 'asc' }]\n                })\n                .all();\n            return json(records.map(formatRecord));\n        } else {\n            // Get all records with optional filter\n            const records = await query\n                .select({\n                    filterByFormula,\n                    sort: [{ field: 'Starts at', direction: 'desc' }]\n                })\n                .all();\n            return json(records.map(formatRecord));\n        }\n    } catch (error) {\n        const { error: errorMessage, status } = handleAirtableError(error);\n        return json({ error: errorMessage }, { status });\n    }\n}\n\n/** @type {import('./$types').RequestHandler} */\nexport async function POST({ request }) {\n    // Check authentication\n    const authError = await requireAuth(request);\n    if (authError) return authError;\n\n    try {\n        const data = await request.json();\n        const record = await base('Events').create(data);\n        return json(formatRecord(record));\n    } catch (error) {\n        const { error: errorMessage, status } = handleAirtableError(error);\n        return json({ error: errorMessage }, { status });\n    }\n}\n\n/** @type {import('./$types').RequestHandler} */\nexport async function PATCH({ request, url }) {\n    // Check authentication\n    const authError = await requireAuth(request);\n    if (authError) return authError;\n\n    try {\n        const id = url.searchParams.get('id');\n        if (!id) {\n            return json({ error: 'Missing event ID' }, { status: 400 });\n        }\n\n        const data = await request.json();\n        const record = await base('Events').update([{ id, fields: data }]);\n        return json(formatRecord(record[0]));\n    } catch (error) {\n        const { error: errorMessage, status } = handleAirtableError(error);\n        return json({ error: errorMessage }, { status });\n    }\n}\n\n/** @type {import('./$types').RequestHandler} */\nexport async function DELETE({ request, url }) {\n    // Check authentication\n    const authError = await requireAuth(request);\n    if (authError) return authError;\n\n    try {\n        const id = url.searchParams.get('id');\n        if (!id) {\n            return json({ error: 'Missing event ID' }, { status: 400 });\n        }\n\n        const record = await base('Events').destroy([id]);\n        return json(formatRecord(record[0]));\n    } catch (error) {\n        const { error: errorMessage, status } = handleAirtableError(error);\n        return json({ error: errorMessage }, { status });\n    }\n}\n"],"names":["env"],"mappings":"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"}