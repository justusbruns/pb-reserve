/// <reference types="@types/google.maps" />
import { SvelteComponent } from "svelte";
declare const __propDef: {
    props: {
        position: google.maps.LatLng | google.maps.LatLngLiteral;
        options: google.maps.MarkerOptions;
        onClick: (e: google.maps.MapMouseEvent) => void;
        onClickableChanged: () => void;
        onCursorChanged: () => void;
        onAnimationChanged: () => void;
        onDblClick: (e: google.maps.MapMouseEvent) => void;
        onDrag: (e: google.maps.MapMouseEvent) => void;
        onDragEnd: (e: google.maps.MapMouseEvent) => void;
        onDraggableChanged: () => void;
        onDragStart: (e: google.maps.MapMouseEvent) => void;
        onFlatChanged: () => void;
        onIconChanged: () => void;
        onMouseDown: (e: google.maps.MapMouseEvent) => void;
        onMouseOut: (e: google.maps.MapMouseEvent) => void;
        onMouseOver: (e: google.maps.MapMouseEvent) => void;
        onMouseUp: (e: google.maps.MapMouseEvent) => void;
        onPositionChanged: () => void;
        onRightClick: (e: google.maps.MapMouseEvent) => void;
        onShapeChanged: () => void;
        onTitleChanged: () => void;
        onVisibleChanged: () => void;
        onZindexChanged: () => void;
        onLoad: (marker: google.maps.Marker) => void;
        onUnmount: (marker: google.maps.Marker) => void;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export type MarkerProps = typeof __propDef.props;
export type MarkerEvents = typeof __propDef.events;
export type MarkerSlots = typeof __propDef.slots;
export default class Marker extends SvelteComponent<MarkerProps, MarkerEvents, MarkerSlots> {
}
export {};
